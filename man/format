名称： fdformat 

使用权限： 所有使用者 

使用方式：fdformat [-n] device 

使用说明 : 
对指定的软碟机装置进行低阶格式化。使用这个指令对软碟格式化的时候，最好指定像是下面的装置： 


/dev/fd0d360 磁碟机 A: ，磁片为 360KB 磁碟 
/dev/fd0h1440 磁碟机 A: ，磁片为 1.4MB 磁碟 
/dev/fd1h1200 磁碟机 B: ，磁片为 1.2MB 磁碟 
如果使用像是 /dev/fd0 之类的装置，如果里面的磁碟不是标准容量，格式化可能会失败。在这种情况之下，使用者可以用 setfdprm 指令先行指定必要参数。 

参数： 


-n 关闭确认功能。这个选项会关闭格式化之后的确认步骤。 

范例： 

fdformat -n /dev/fd0h1440 

将磁碟机 A 的磁片格式化成 1.4MB 的磁片。并且省略确认的步骤。 



名称： mformat 

使用权限： 所有使用者 

使用方式： 

mformat [-t cylinders] [-h heads] [-s sectors] [-l volume_label] [-F] [-I fsVer-sion] [-S sizecode] [-2 sectors_on_track_0] [-M software_sector_size] [-a] [-X] [-C] [-H hidden_sectors] [-r root_sectors] [-B boot_sector] [-0 rate_on_track_0] [-A rate_on_other_tracks] [-1] [-k] drive: 

在已经做过低阶格式化的磁片上建立 DOS 档案系统。如果在编译 mtools 的时候把 USE_2M 的参数打开，部分与 2M 格式相关的参数就会发生作用。否则这些参数（像是 S,2,1,M）不会发生作用。 

参数： 

-t 磁柱（synlider）数 
-h 磁头（head）数 
-s 每一磁轨的磁区数 
-l 标签 
-F 将磁碟格式化为 FAT32 格式，不过这个参数还在实验中。 
-I 设定 FAT32 中的版本号。这当然也还在实验中。 
-S 磁区大小代码，计算方式为 sector = 2^(大小代码+7) 
-c 磁丛（cluster）的磁区数。如果所给定的数字会导致磁丛数超过 FAT 表的限制，mformat 会自动放大磁区数。 
-s 
-M 软体磁区大小。这个数字就是系统回报的磁区大小。通常是和实际的大小相同。 
-a 如果加上这个参数，mformat 会产生一组 Atari 系统的序号给这块软碟。 
-X 将软碟格式化成 XDF 格式。使用前必须先用 xdfcopy 指令对软碟作低阶格式化的动作。 
-C 产生一个可以安装 MS-DOS 档案系统的磁碟影像档（disk image）。当然对一个实体磁碟机下这个参数是没有意义的。 
-H 隐藏磁区的数目。这通常适用在格式化硬碟的分割区时，因为通常一个分割区的前面还有分割表。这个参数未经测试，能不用就不用。 
-n 磁碟序号 
-r 根目录的大小，单位是磁区数。这个参数只对 FAT12 和 FAT16 有效。 
-B 使用所指定的档案或是设备的开机磁区做为这片磁片或分割区的开机磁区。当然当中的硬体参数会随之更动。 
-k 尽量保持原有的开机磁区。 
-0 第 0 轨的资料传输率 
-A 第 0 轨以外的资料传输率 
-2 使用 2m 格式 
-1 不使用 2m 格式 

范例： 
mformat a: 

这样会用预设值把 a: （就是 /dev/fd0）里的磁碟片格式化。 



名称： mkdosfs 

使用权限： 所有使用者 

使用方式： mkdosfs [ -c | -l filename ] 
[ -f number_of_FATs ] 
[ -F FAT_size ] 
[ -i volume_id ] 
[ -m message_file ] 
[ -n volume_name ] 
[ -r root_dir_entry ] 
[ -s sector_per_cluster ] 
[ -v ] 
device 
[ block_count ] 



说明： 建立 DOS 档案系统。 device 指你想要建立 DOS 档案系统的装置代号。像是 /dev/hda1 等等。 block_count 则是你希望配置的区块数。如果 block_count 没有指定则系统会自动替你计算符合该装置大小的区块数。 

参数： 


-c 建立档案系统之前先检查是否有坏轨。 
-l 从得定的档案中读取坏轨记录。 
-f 指定档案配置表（FAT , File Allocation Table)的数量。预设值为 2 。目前 Linux 的 FAT 档案系统不支援超过 2 个 FAT 表。通常这个不需要改。 
-F 指定 FAT 表的大小，通常是 12 或是 16 个位元组。12 位元组通常用于磁碟片，16 位元组用于一般硬碟的分割区，也就是所谓的 FAT16 格式。这个值通常系统会自己选定适当的值。在磁碟片上用 FAT16 通常不会发生作用，反之在硬碟上用 FAT12 亦然。 
-i 指定 Volume ID。一般是一个 4 个位元组的数字，像是 2e203a47 。如果不给系统会自己产生。 
-m 当使用者试图用这片磁片或是分割区开机，而上面没有作业系统时，系统会给使用者一段警告讯息。这个参数就是用来变更这个讯息的。你可以先用档案编辑好，然后用这个参数指定，或是用 
-m - 
这样系统会要求你直接输入这段文字。要特别注意的是，档案里的字串长度不要超过 418 个字，包括展开的跳栏符号（TAB）和换行符号（换行符号在 DOS 底下算两个字元！） 
-n 指定 Volume Name，就是磁碟标签。如同在 DOS 底下的 format 指令一样，给不给都可以。没有预设值。 
-r 指定根目录底下的最大档案数。这里所谓的档案数包括目录。预设值是在软碟上是 112 或是 224 ，在硬碟上是 512。没事不要改这个数字。 
-s 每一个磁丛（cluster）的磁区数。必须是 2 的次方数。不过除非你知道你在作什么，这个值不要乱给。 
-v 提供额外的讯息 

范例： 
mkdosfs -n Tester /dev/fd0 将 A 槽里的磁碟片格式化为 DOS 格式，并将标签设为 Tester
从零开始：Linux基础教程之命令的使用 

对于 Linux 新手，或者那些想要重新审视或改进自己对基本 Linux 概念（比如：复制和移动文件、创建符号和硬链接、设置文件系统对象所有权和权限以及同管道和重定向一起使用 Linux 的标准文本处理命令）的理解的人来说，本系列连载文章之一是理想的教材。沿着这个方向，我们将一起分享很多心得、技巧和窍门，使该教程甚至对于那些具有丰富经验的 Linux 老手来说都是“有血有肉”，并且是实用的。 
